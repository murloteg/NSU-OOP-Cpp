### ЗАМЕТКИ ###

<Нетривиальные стратегии>:

1) Friendly-Fool:
-Описание стратегии: конфигурационный файл для данной стратегии (хранит ровно одно целое число:
кол-во предыдущих ходов, где нужно провести поиск значения COOPERATE).
Если хотя бы один из оппонентов не более заданного кол-ва ходов выбрал вариант "COOPERATE", то данная стратегия
проголосует за вариант "COOPERATE". Иначе - вариант "DEFECT". На первых двух ходах стратегия сотрудничает.
Примеры ходов [S1 - FF]:

config_parameter = 2;
    S1 S2 S3 >-< R1 R2 R3
1)  C  D  D      0  5  5
2)  C  D  C      3  9  3
3)  C  D  D      0  5  5
4)  C  D  D      0  5  5
5)  D  D  D      1  1  1


2) Probability-Is-Power:
-Описание стратегии: конфигурационный файл для данной стратегии хранит ровно одно число с плавающей точкой.
На первом и втором ходах стратегия голосует за вариант "COOPERATE".
Стратегия также хранит в своих приватных полях: общее количество голосов "DEFECT" и голосов "COOPERATE",
сделанных оппонентами, а также общее кол-во голосов. Если вероятность одного из вариантов превышает
заданное в конфигурационном файле значение, то стратегия выдает своим результатом этот вариант.
Если же вероятности обоих вариантов совпадают, то выдается "DEFECT".
Примеры ходов [S1 - PIP]:

config_parameter = 0.5;
    S1 S2 S3 >-< R1 R2 R3
1)  C  C  D      3  3  9
2)  C  C  C      7  7  7
3)  C  C  D      3  3  9    [CC = 3/4] [DC = 1/4]
4)  C  D  D      0  5  5    [CC = 4/6] [DC = 2/6]
5)  D  D  D      1  1  1    [CC = 4/8] [DC = 4/8]


3) D-MEANS-DOMINATOR:
-Описание стратегии: конфигурационный файл для данной стратегии хранит ровно одно число: кол-во ходов,
при котором данная стратегия сотрудничает, если оба оппонента выбрали вариант "COOPERATE".
После данного числа ходов стратегия выдает вариант "DEFECT".
На первом ходу стратегия голосует за вариант "DEFECT".
Если же оппоненты проголосовали за вариант "COOPERATE", то далее стратегия проголосует, как они.
Если после этого голоса игроки откажутся сотрудничать, то стратегия будет всегда выдавать вариант "DEFECT".
Примеры ходов [S1 - DMD]:

config_parameter = 1;
    S1 S2 S3 >-< R1 R2 R3
1)  D  C  C      9  3  3
2)  C  C  C      7  7  7
3)  D  C  C      9  3  3
4)  C  C  D      3  3  9
5)  D  D  D      1  1  1


<Матрица игры>:

- Задан файл, в котором будет храниться матрица игры. Каждый ход голоса всех стратегий заносятся в него, в формате:
"C D C ", то есть каждая стратегия генерирует ровно два символа: C или D, а также пробельный символ.
Далее начинается подсчет очков, набранных каждой стратегией. Для этого процесса предполагаю использование std::map,
чтобы генерируемую на основе голоса текущей стратегии и голосов её оппонентов из конфигурационного файла строку, искать
в заданных значениях, лежащих в мэпе.
